server:
  port: 8080

spring:
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blgantdscikbal?allowMultiQueries=true&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true&rewriteBatchedStatements=true
    username: root
    password: Err;2[eoGFUriwdgr
    hikari:
      minimum-idle: 10
      idle-timeout: 180000
      maximum-pool-size: 100
      auto-commit: true
      pool-name: MyHikariCP
      max-lifetime: 60000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  redis:
    host: 127.0.0.1
    port: 6379
    password:
    database: 0
    lettuce:
      pool:
        min-idle: 10
        max-idle: 100
        max-active: 100
        max-wait: 10000

  rabbitmq:
    host: 141.255.162.26
    port: 5672
    username: admin
    password: Comunity1@
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 3000

  elasticsearch:
    rest:
      uris: 0.0.0.0:9200
  mail:
    host: smtp.gmail.com
    username: estisaylet@gmail.com
    password: Comunity1@
    default-encoding: UTF-8
    protocol: smtp
    port: 465
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            port: 465
          ssl:
            enable: true
          starttls:
            enable: true
            required: true
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

jwt:
  secret: aurora

search:
  mode: elasticsearch

upload:
  mode: local
  local:
    url: https://blog.antdsc.com/upload/
    dir: /www/wwwroot/upload/
  oss:
    url: http://Bucket域名/
    endpoint: OSS配置endpoint
    accessKeyId: OSS配置accessKeyId
    accessKeySecret: OSS配置accessKeySecret
    bucketName: OSS配置bucketName
  minio:
    url: http://minio的ip:9000/
    endpoint: http://minio的ip:9000
    accesskey: 用户名
    secretKey: 密码
    bucketName: 桶的名称

website:
  url: https://blog.antdsc.com

qq:
  app-id: QQ APPID
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}
